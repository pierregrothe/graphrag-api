apiVersion: v1
kind: Secret
metadata:
  name: graphrag-secrets
  namespace: graphrag
type: Opaque
stringData:
  # Database credentials - REPLACE WITH YOUR VALUES
  DATABASE_URL: "postgresql://graphrag:changeme@postgres-service:5432/graphrag"
  
  # Redis connection
  REDIS_URL: "redis://:changeme@redis-service:6379"
  
  # JWT Secret - GENERATE A STRONG KEY
  JWT_SECRET_KEY: "your-super-secret-jwt-key-change-this-in-production"
  JWT_ALGORITHM: "HS256"
  
  # Google Gemini (if using) - ADD YOUR CREDENTIALS
  GOOGLE_API_KEY: ""
  GOOGLE_PROJECT_ID: ""
  
  # Admin credentials
  DEFAULT_ADMIN_PASSWORD: "admin-password-change-this"
  
---
# External Secrets Operator (ESO) example for production
# Uncomment and configure if using ESO with AWS Secrets Manager, Vault, etc.
# apiVersion: external-secrets.io/v1beta1
# kind: SecretStore
# metadata:
#   name: graphrag-secret-store
#   namespace: graphrag
# spec:
#   provider:
#     aws:
#       service: SecretsManager
#       region: us-west-2
#       auth:
#         secretRef:
#           accessKeyIDSecretRef:
#             name: aws-secret
#             key: access-key
#           secretAccessKeySecretRef:
#             name: aws-secret
#             key: secret-key
# ---
# apiVersion: external-secrets.io/v1beta1
# kind: ExternalSecret
# metadata:
#   name: graphrag-external-secrets
#   namespace: graphrag
# spec:
#   refreshInterval: 1h
#   secretStoreRef:
#     name: graphrag-secret-store
#     kind: SecretStore
#   target:
#     name: graphrag-secrets
#   data:
#     - secretKey: DATABASE_URL
#       remoteRef:
#         key: graphrag/database/url
#     - secretKey: JWT_SECRET_KEY
#       remoteRef:
#         key: graphrag/jwt/secret