name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: read

jobs:
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version info
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "VERSION_NUMBER=${VERSION#v}" >> $GITHUB_OUTPUT

          # Extract calendar-based version components
          if [[ $VERSION =~ ^v([0-9]{4})\.([0-9]{1,2})\.(10|20)\.([0-9]{1,3})$ ]]; then
            YEAR="${BASH_REMATCH[1]}"
            WEEK="${BASH_REMATCH[2]}"
            ENV_TYPE="${BASH_REMATCH[3]}"
            SEQ_NUM="${BASH_REMATCH[4]}"

            if [ "$ENV_TYPE" = "20" ]; then
              echo "IS_PRODUCTION=true" >> $GITHUB_OUTPUT
              echo "ENV_NAME=Production" >> $GITHUB_OUTPUT
              echo "PRERELEASE=false" >> $GITHUB_OUTPUT
            else
              echo "IS_PRODUCTION=false" >> $GITHUB_OUTPUT
              echo "ENV_NAME=Development" >> $GITHUB_OUTPUT
              echo "PRERELEASE=true" >> $GITHUB_OUTPUT
            fi

            echo "YEAR=$YEAR" >> $GITHUB_OUTPUT
            echo "WEEK=$WEEK" >> $GITHUB_OUTPUT
            echo "BUILD=$SEQ_NUM" >> $GITHUB_OUTPUT
          fi

      - name: Generate Release Notes
        id: notes
        run: |
          cat << EOF > release_notes.md
          ## 🚀 ${{ steps.version.outputs.ENV_NAME }} Release

          ### Version Information
          - **Version**: ${{ steps.version.outputs.VERSION_NUMBER }}
          - **Year**: ${{ steps.version.outputs.YEAR }}
          - **Week**: ${{ steps.version.outputs.WEEK }}
          - **Build**: ${{ steps.version.outputs.BUILD }}
          - **Type**: ${{ steps.version.outputs.ENV_NAME }}

          ### 🐳 Docker Images

          Pull the latest image:
          \`\`\`bash
          docker pull ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION_NUMBER }}
          ${{ steps.version.outputs.IS_PRODUCTION == 'true' && 'docker pull ghcr.io/${{ github.repository }}:latest' || 'docker pull ghcr.io/${{ github.repository }}:dev-latest' }}
          \`\`\`

          ### 📦 Quick Start

          1. **Run with Docker:**
          \`\`\`bash
          docker run -d \\
            -p 8001:8001 \\
            -e JWT_SECRET_KEY="your-secret-key-here" \\
            -e LLM_PROVIDER="ollama" \\
            -e OLLAMA_BASE_URL="http://host.docker.internal:11434" \\
            ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION_NUMBER }}
          \`\`\`

          2. **With Docker Compose:**
          \`\`\`yaml
          services:
            graphrag-api:
              image: ghcr.io/${{ github.repository }}:${{ steps.version.outputs.VERSION_NUMBER }}
              ports:
                - "8001:8001"
              environment:
                - JWT_SECRET_KEY=your-secret-key-here
                - LLM_PROVIDER=ollama
                - OLLAMA_BASE_URL=http://ollama:11434
          \`\`\`

          ### 🔄 What's Changed

          See [full changelog](https://github.com/${{ github.repository }}/compare/${{ github.event.before }}...${{ github.sha }})

          ### 📋 Container Details

          - **Base Image**: Python 3.12-slim
          - **Port**: 8001
          - **Platforms**: ${{ steps.version.outputs.IS_PRODUCTION == 'true' && 'linux/amd64, linux/arm64' || 'linux/amd64' }}
          - **Size**: ~500MB

          ### ⚠️ Important Notes

          ${{ steps.version.outputs.IS_PRODUCTION == 'false' && '> **This is a development release.** It may contain experimental features and is not recommended for production use.' || '> **This is a production release.** It has been tested and is ready for production deployment.' }}

          ### 📚 Documentation

          - [API Documentation](https://github.com/${{ github.repository }}#api-documentation)
          - [Configuration Guide](https://github.com/${{ github.repository }}#configuration)
          - [Docker Setup](https://github.com/${{ github.repository }}#docker)

          ---

          **Full Changelog**: https://github.com/${{ github.repository }}/commits/${{ steps.version.outputs.VERSION }}
          EOF

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.version.outputs.ENV_NAME }} Release ${{ steps.version.outputs.VERSION }}
          body_path: release_notes.md
          prerelease: ${{ steps.version.outputs.PRERELEASE == 'true' }}
          draft: false
          generate_release_notes: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
