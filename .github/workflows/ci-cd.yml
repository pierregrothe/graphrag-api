name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

permissions:
  contents: read

env:
  PYTHON_VERSION: '3.12'
  POETRY_VERSION: '1.8.5'

jobs:
  # Basic Code Quality Checks
  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: poetry install --with dev

      - name: Run Black
        run: poetry run black --check src/ tests/
        continue-on-error: true  # Don't fail on formatting issues

      - name: Run Ruff
        run: poetry run ruff check src/ tests/
        continue-on-error: true  # Don't fail on linting issues

  # Basic Tests
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: quality
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          version: ${{ env.POETRY_VERSION }}
          virtualenvs-create: true
          virtualenvs-in-project: true

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: poetry install --with dev

      - name: Run basic unit tests
        env:
          # Test environment variables
          DEBUG: "true"
          JWT_SECRET_KEY: "test-secret-key-for-ci"
          GRAPHRAG_LLM_PROVIDER: "ollama"
          OLLAMA_BASE_URL: "http://localhost:11434"
          OLLAMA_LLM_MODEL: "llama2"
          OLLAMA_EMBEDDING_MODEL: "nomic-embed-text"
        run: poetry run pytest tests/unit/test_config.py -v
        continue-on-error: true  # Don't fail on test issues
