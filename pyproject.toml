[tool.poetry]
name = "graphrag_api_service"
version = "0.1.0"
description = ""
authors = ["Pierre Groth√© <pierre@grothe.ca>"]
readme = "README.md"
packages = [{include = "graphrag_api_service", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
graphrag = "^2.5.0"
fastapi = "^0.116.1"
uvicorn = {extras = ["standard"], version = "^0.35.0"}
pydantic = "^2.10.0"
pydantic-settings = "^2.7.0"
python-multipart = "^0.0.12"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
black = "^24.0.0"
ruff = "^0.8.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py312"
line-length = 100

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
