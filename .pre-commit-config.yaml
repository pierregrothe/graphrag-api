# Pre-commit configuration for GraphRAG API Service
# Matches GitHub Actions CI workflow (.github/workflows/ci-cd.yml)
# See https://pre-commit.com for more information

repos:
    # Basic file checks (not in GitHub Actions but useful)
    - repo: https://github.com/pre-commit/pre-commit-hooks
      rev: v4.6.0
      hooks:
          - id: trailing-whitespace
          - id: end-of-file-fixer
          - id: check-yaml
          - id: check-json
            exclude: "docs-platform/docsearch-config.json"
          - id: check-toml
          - id: check-added-large-files
            args: ["--maxkb=1000"]
          - id: check-merge-conflict

    # Python code formatting with black (matches GitHub Actions)
    - repo: https://github.com/psf/black
      rev: 24.10.0
      hooks:
          - id: black
            language_version: python3.12
            args: ["--line-length=100", "--target-version=py312"]
            files: ^(src|tests)/





    # Local hooks matching GitHub Actions CI workflow
    - repo: local
      hooks:
          # Black formatting check (matches GitHub Actions)
          - id: black-check
            name: Black formatting check (local)
            entry: poetry run black --check
            language: system
            types: [python]
            files: ^(src|tests)/
            pass_filenames: true

          # Ruff linting (matches GitHub Actions)
          - id: ruff-check
            name: Ruff linting
            entry: poetry run ruff check
            language: system
            types: [python]
            files: ^(src|tests)/
            pass_filenames: true

          # MyPy type checking (matches GitHub Actions)
          - id: mypy-check
            name: MyPy type checking
            entry: poetry run mypy src/graphrag_api_service
            language: system
            types: [python]
            pass_filenames: false
            always_run: true

          # Bandit security check (matches GitHub Actions)
          - id: bandit-check
            name: Bandit security scanning
            entry: poetry run bandit -r src/ -ll -q
            language: system
            types: [python]
            pass_filenames: false
            files: ^src/

          # Unit tests (on pre-push only, matches GitHub Actions)
          - id: pytest-unit
            name: Run unit tests
            entry: poetry run pytest tests/unit/ -v
            language: system
            pass_filenames: false
            stages: [pre-push]

# Configuration for specific tools
default_language_version:
    python: python3.12

# Exclude patterns
exclude: |
    (?x)^(
      \.venv/|
      \.git/|
      __pycache__/|
      \.pytest_cache/|
      node_modules/|
      \.mypy_cache/|
      docs-platform/|
      workspaces/|
      indexing_jobs/|
      data/
    )$

# Fail fast - stop on first failure
fail_fast: false

# Minimum pre-commit version
minimum_pre_commit_version: 3.0.0
